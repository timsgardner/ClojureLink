top = tok-seq-H

<tok-seq-H> = (whitespace? tok-H)* whitespace?

<tok-H> = comment | parenthetical-H | string | word | escaped | regex | metadata | macro-things-H | deref | clr-type

<parenthetical-H> = list | vector | map | set | function-literal

list =  <'('> tok-seq-H <')'>

vector = <'['> tok-seq-H <']'>

map = <'{'> tok-seq-H <'}'>

set = <'#{'> tok-seq-H <'}'>

function-literal = <'#('> tok-seq-H <')'>

# this abomination is strictly here because of that stupid alternation bug in java regexes

string = "\"" (#"\\\""? #"((?!\\\")[^\"])*")* #"\\\""? "\""

clr-type = #"\|(?:\|\||[^|])*?\|"

regex = '#' string

metadata =  "^" whitespace? (map | word | string)

comment = #";.*"

escaped = #'\\(\W|\w+)'

word = !#"(#[\s\(\)\{\}\[\]\"_])|[\^\~\@\`\'\|\"]" #'[^;\s\(\)\{\}\[\]\"\\]+'

# ------------------------------------

<macro-things-H> = quote | var-quote | ignore | syntax-quote | unquote | unquote-splicing 

quote = "'"

var-quote = "#'" 

ignore = "#_"

syntax-quote = '`' 

unquote = '~' !'@' 

unquote-splicing = '~@'

# ------------------------------------

deref = '@'
 
# ------------------------------------

whitespace = #'\s+'
